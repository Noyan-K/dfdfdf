# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type SupplierModel {
  id: Int!
  deliver_goods_yourself: Boolean!
  array_of_delivery_ids: [Int!]!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Supplier {
  id: Int!
  deliver_goods_yourself: Boolean!
  array_of_delivery_ids: [Int!]!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  User: User
  Address: Address
}

type Address {
  id: Int!
  user_id: Int!
  supplier_id: Int
  type: AddressTypeEnum!
  name: String!
  postcode: Int
  country: String!
  region: String!
  city: String!
  street: String!
  house_number: Int!
  apartment_number_or_office: Int
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  User: User!
  Supplier: Supplier!
}

enum AddressTypeEnum {
  DELIVERY
  WAREHOUSE
}

type OrderModel {
  id: Int!
  document_id: Int
  cloth_sex: ClothSexEnum!
  product_id: Int
  custom_size: String
  custom_model: String
  custom_knot: String
  custom_textile: String
  additional_materials: String
  artistic_description: String
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
}

enum ClothSexEnum {
  MALE
  FEMALE
  UNISEX
}

type Document {
  id: Int!
  url: String!
  name: String!
  type: DocumentTypeEnum!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
}

enum DocumentTypeEnum {
  IMAGE
  FILE
}

type User {
  id: Int!
  name: String!
  user_name: String
  document_id: Int
  array_of_delivery_ids: [Int!]!
  supplier_id: Int
  email: String!
  type: UserTypeEnum!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  Document: Document
  Supplier: SupplierModel
  Cart: [OrderModel!]
  UserRole: [UserRole!]
  Address: Address
}

enum UserTypeEnum {
  USER
  GUEST
}

type UserRole {
  id: Int!
  user_id: Int!
  role_name: RolesEnum!
  User: [User!]!
}

enum RolesEnum {
  ADMIN
  USER
}

type ProductModel {
  id: Int!
  parent_id: Int
  name: String!
  mannequin: MannequinPositionEnum
  sex: ClothSexEnum
  description: String
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
}

enum MannequinPositionEnum {
  UP
  DOWN
  FULL
}

type ProductDocument {
  id: Int!
  product_id: Int!
  document_id: Int!
  type: DocumentTypeOfProductEnum!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  Product: ProductModel!
  Document: Document
}

enum DocumentTypeOfProductEnum {
  MANNEQUIN
  PREVIEW
}

type Product {
  id: Int!
  parent_id: Int
  name: String!
  mannequin: MannequinPositionEnum
  sex: ClothSexEnum
  description: String
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  Children: [Product!]
  Parent: Product
  Order: [Order!]
  ProductDocument: [ProductDocument!]
}

type Size {
  id: Int!
  json: JSON!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type OrderSize {
  size_id: Int!
  order_id: Int!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  Order: OrderModel!
  Size: Size!
}

type Order {
  id: Int!
  document_id: Int
  cloth_sex: ClothSexEnum!
  product_id: Int
  custom_size: String
  custom_model: String
  custom_knot: String
  custom_textile: String
  additional_materials: String
  artistic_description: String
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  Product: Product
  OrderSize: [OrderSize!]
  Document: [Document!]
}

type Delivery {
  id: Int!
  name: String!
  type: DeliveryTypeEnum!
  parent_id: Int
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  Children: [Delivery!]!
  Parent: Delivery
}

enum DeliveryTypeEnum {
  USER
  SUPPLIER
}

type Query {
  user: User
  getProfile: User
  userRoles(user_id: Int!, skip: Int, take: Int): [UserRole!]!
  userRole(user_id: Int!, role_name: RolesEnum!): UserRole
  suppliers(findSuppliersInput: FindSuppliersInput!, take: Int, skip: Int): [Supplier!]!
  supplier(id: Int!): Supplier
  products(sex: ClothSexEnum!, parent_id: Int): [Product!]!
  searchProducts(sex: ClothSexEnum!, search: String!): [Product!]!
  product(id: Int!): Product
  documents(take: Int, skip: Int): [Document!]!
  document(id: Int!): Document!
  getDocuments(id: [Int!]!): [Document!]
  getDocument(id: Int!): [Document!]
  orders(take: Int, skip: Int): [Order!]!
  order(id: Int!): Order
  generatePdf(id: Int!): Document
  addresses(take: Int, skip: Int, supplier_id: Int): [Address!]!
  address(id: Int!): Address!
  sizes(take: Int, skip: Int): [Size!]!
  size(id: Int!): Size!
  orderSize(id: Int!): OrderSize!
}

input FindSuppliersInput {
  search: String
  sort_by: SortByEnum
}

enum SortByEnum {
  NAME
}

type Mutation {
  updateUser(updateUserInput: UpdateUserInput!): User!
  createUserRole(createUserRoleInput: CreateUserRoleInput!): UserRole!
  removeUserRole(user_id: Int!, role_name: RolesEnum!): UserRole!
  createSupplier(createSupplierInput: CreateSupplierInput!): Supplier!
  updateSupplier(updateSupplierInput: UpdateSupplierInput!): Supplier
  removeSupplier(id: Int!): Supplier!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(id: Int!, updateProductInput: UpdateProductInput!): Product
  removeProduct(id: Int!): Product!
  createDocument(createDocumentInput: CreateDocumentInput!): Document!
  updateDocument(updateDocumentInput: UpdateDocumentInput!): Document!
  removeDocument(id: Int!): Document!
  createOrder(createOrderInput: CreateOrderInput!): Order!
  updateOrder(updateOrderInput: UpdateOrderInput!): Order
  deleteOrder(id: Int!): Order!
  createAddress(createAddressInput: CreateAddressInput!): Address!
  updateAddress(id: Int!, updateAddressInput: UpdateAddressInput!): Address!
  removeAddress(id: Int!): Address!
  createSize(createSizeInput: CreateSizeInput!): Size!
  updateSize(id: Int!, updateSizeInput: UpdateSizeInput!): Size!
  removeSize(id: Int!): Size!
  createOrderSize(createOrderSizeInput: CreateOrderSizeInput!): OrderSize!
  updateOrderSize(updateOrderSizeInput: UpdateOrderSizeInput!): OrderSize!
  removeOrderSize(order_id: Int!, size_id: Int!): OrderSize!
}

input UpdateUserInput {
  name: String
  email: String
  newPassword: String!
  password: String!
  currency_id: Int
  array_of_delivery_ids: [Int!]
}

input CreateUserRoleInput {
  user_id: Int!
  role_name: RolesEnum!
}

input CreateSupplierInput {
  name: String!
}

input UpdateSupplierInput {
  name: String
  id: Int!
  deliver_goods_yourself: Boolean
  array_of_delivery_ids: [Int!]
}

input CreateProductInput {
  parent_id: Int
  name: String!
  sex: ClothSexEnum
  description: String
  preview_document_id: Int!
  mannequin_document_id: Int!
}

input UpdateProductInput {
  parent_id: Int
  name: String
  sex: ClothSexEnum
  description: String
  preview_document_id: Int
  mannequin_document_id: Int
}

input CreateDocumentInput {
  url: String!
  name: String!
  type: DocumentTypeEnum!
}

input UpdateDocumentInput {
  url: String
  name: String
  type: DocumentTypeEnum
  id: Int!
}

input CreateOrderInput {
  cloth_sex: ClothSexEnum
  category_id: Int
  custom_size: String
  custom_model: String
  custom_knot: String
  custom_textile: String
  additional_materials: String
  artistic_description: String
}

input UpdateOrderInput {
  cloth_sex: ClothSexEnum
  category_id: Int
  custom_size: String
  custom_model: String
  custom_knot: String
  custom_textile: String
  additional_materials: String
  artistic_description: String
  id: Int!
}

input CreateAddressInput {
  type: AddressTypeEnum!
  name: String!
  postcode: Int
  country: String!
  region: String!
  city: String!
  street: String!
  house_number: Int!
  apartment_number_or_office: Int
}

input UpdateAddressInput {
  type: AddressTypeEnum
  name: String
  postcode: Int
  country: String
  region: String
  city: String
  street: String
  house_number: Int
  apartment_number_or_office: Int
}

input CreateSizeInput {
  name: String!
  russian_size: Int!
  chest_girth: String!
  waits_girth: String!
  hips_girth: String!
}

input UpdateSizeInput {
  name: String
  russian_size: Int
  chest_girth: String
  waits_girth: String
  hips_girth: String
}

input CreateOrderSizeInput {
  size_id: Int!
  order_id: Int!
}

input UpdateOrderSizeInput {
  size_id: Int
  order_id: Int
  id: Int!
}